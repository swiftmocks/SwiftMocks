// This source file is part of SwiftMocks open source project.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Copyright © 2019-2020, Sergiy Drapiko
// Copyright © 2020, SwiftMocks project contributors
//
// This source file contains code developed by Swift open source project,
// licensed under Apache License v2.0 with Runtime Library Exception. For
// licensing information, see https://swift.org/LICENSE.txt

%{
# see Scripts/gyb-generators/type-nodes
# generated enum does not contain sugared types (because we don't need them)

import re

def camelCase(str):
    if str.startswith('SIL'):
        return 'sil' + str[3:]
    else:
        return re.sub('^[A-Z]+', lambda m: m.group(0).lower(), str)

with open("TypeKind.swift.gyb.input") or sys.exit(-1) as f:
    kinds = [line.rstrip() for line in f]

}%

import Foundation

enum TypeKind: Hashable {
% for kind in kinds:
    case `${camelCase(kind)}`
% end
}

